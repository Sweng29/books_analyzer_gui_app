/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.books.business;

import com.books.dao.GenericDAO;
import com.books.daoimpl.BookDetailDAOImpl;
import com.books.models.AnalysedData;
import com.books.models.BookDetail;
import com.books.utility.CommonMethods;
import com.books.utility.ExcelUtility;
import java.sql.ResultSet;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.time.Duration;
import java.time.LocalDate;
import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;
import java.util.ArrayList;
import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import java.util.concurrent.TimeUnit;
import javax.swing.JFileChooser;
import javax.swing.SwingUtilities;
import javax.swing.UIManager;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Kashif Alei
 */
public class CSVLoaderFrame extends javax.swing.JFrame {

    /**
     * Creates new form CSVLoaderFrame
     */
    private GenericDAO<BookDetail> bookDetailDAO;
    public CSVLoaderFrame() {
        initComponents();
        this.setLocationRelativeTo(null);
        bookDetailDAO = new BookDetailDAOImpl();
        populateCSVTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        confirmDeleteDialog = new javax.swing.JDialog();
        jPanel3 = new javax.swing.JPanel();
        header = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        message = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        attendanceSearch = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        csvTable = new javax.swing.JTable();
        csvLoaderBtn = new javax.swing.JLabel();
        analysisBtn = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        deletePreviousDataBtn = new javax.swing.JLabel();
        deletePreviousDataBtn1 = new javax.swing.JLabel();

        confirmDeleteDialog.setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        confirmDeleteDialog.setUndecorated(true);
        confirmDeleteDialog.getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel3.setBackground(new java.awt.Color(11, 18, 29));

        header.setFont(new java.awt.Font("Century Gothic", 0, 18)); // NOI18N
        header.setForeground(new java.awt.Color(140, 198, 62));
        header.setText("Delete All Records");

        jLabel3.setFont(new java.awt.Font("Century Gothic", 0, 18)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("X");
        jLabel3.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel3MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(header, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 311, Short.MAX_VALUE)
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(header, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        confirmDeleteDialog.getContentPane().add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 540, -1));

        jPanel4.setBackground(new java.awt.Color(47, 55, 67));
        jPanel4.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel6.setBackground(new java.awt.Color(140, 198, 62));
        jLabel6.setFont(new java.awt.Font("Century Gothic", 0, 18)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel6.setText("DELETE");
        jLabel6.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel6.setOpaque(true);
        jLabel6.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel6MouseClicked(evt);
            }
        });
        jPanel4.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 150, 85, 31));

        message.setBackground(new java.awt.Color(255, 255, 255));
        message.setFont(new java.awt.Font("Century Gothic", 0, 15)); // NOI18N
        message.setForeground(new java.awt.Color(255, 255, 255));
        message.setText("Are you sure you want to delete all previous records?");
        jPanel4.add(message, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 10, 399, 96));

        jLabel7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/books/images/info.png")));
        jPanel4.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 11, 100, 80));

        jLabel8.setBackground(new java.awt.Color(255, 0, 51));
        jLabel8.setFont(new java.awt.Font("Century Gothic", 0, 18)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel8.setText("CANCEL");
        jLabel8.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel8.setOpaque(true);
        jLabel8.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel8MouseClicked(evt);
            }
        });
        jPanel4.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 150, 85, 31));

        confirmDeleteDialog.getContentPane().add(jPanel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 40, 540, 200));

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setUndecorated(true);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(53, 168, 83));
        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel1.setBackground(new java.awt.Color(255, 255, 255));
        jLabel1.setFont(new java.awt.Font("Century Gothic", 0, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("CSV Loader");

        jLabel2.setFont(new java.awt.Font("Century Gothic", 0, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("X");
        jLabel2.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel2MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(552, 552, 552)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 256, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 518, Short.MAX_VALUE)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 44, Short.MAX_VALUE)
                    .addComponent(jLabel2))
                .addContainerGap())
        );

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1370, 70));

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel2.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                jPanel2MouseDragged(evt);
            }
        });
        jPanel2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jPanel2MouseClicked(evt);
            }
        });
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel4.setFont(new java.awt.Font("Century Gothic", 0, 15)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 0, 51));
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("Please delete the data once analysed.");
        jPanel2.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 30, 290, 26));

        attendanceSearch.setFont(new java.awt.Font("Century Gothic", 0, 15)); // NOI18N
        attendanceSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                attendanceSearchActionPerformed(evt);
            }
        });
        attendanceSearch.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                attendanceSearchKeyReleased(evt);
            }
        });
        jPanel2.add(attendanceSearch, new org.netbeans.lib.awtextra.AbsoluteConstraints(1120, 40, 220, -1));

        csvTable.setFont(new java.awt.Font("Century Gothic", 0, 17)); // NOI18N
        csvTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        csvTable.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        csvTable.setRowHeight(20);
        csvTable.setSelectionBackground(new java.awt.Color(11, 18, 29));
        csvTable.setSelectionForeground(new java.awt.Color(140, 198, 62));
        csvTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                csvTableMouseClicked(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                csvTableMouseReleased(evt);
            }
        });
        jScrollPane2.setViewportView(csvTable);

        jPanel2.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 80, 1330, 580));

        csvLoaderBtn.setBackground(new java.awt.Color(53, 168, 83));
        csvLoaderBtn.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        csvLoaderBtn.setForeground(new java.awt.Color(255, 255, 255));
        csvLoaderBtn.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        csvLoaderBtn.setText("Select File");
        csvLoaderBtn.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        csvLoaderBtn.setOpaque(true);
        csvLoaderBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                csvLoaderBtnMouseClicked(evt);
            }
        });
        jPanel2.add(csvLoaderBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 30, 170, 30));

        analysisBtn.setBackground(new java.awt.Color(53, 168, 83));
        analysisBtn.setFont(new java.awt.Font("Century Gothic", 0, 15)); // NOI18N
        analysisBtn.setForeground(new java.awt.Color(255, 255, 255));
        analysisBtn.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        analysisBtn.setText("Analyse data");
        analysisBtn.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        analysisBtn.setOpaque(true);
        analysisBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                analysisBtnMouseClicked(evt);
            }
        });
        jPanel2.add(analysisBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 30, 180, 30));

        jLabel5.setFont(new java.awt.Font("Century Gothic", 0, 15)); // NOI18N
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setText("Search");
        jPanel2.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(1060, 40, -1, 26));

        deletePreviousDataBtn.setBackground(new java.awt.Color(53, 168, 83));
        deletePreviousDataBtn.setFont(new java.awt.Font("Century Gothic", 0, 15)); // NOI18N
        deletePreviousDataBtn.setForeground(new java.awt.Color(255, 255, 255));
        deletePreviousDataBtn.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        deletePreviousDataBtn.setText("Delete Previous Data");
        deletePreviousDataBtn.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        deletePreviousDataBtn.setOpaque(true);
        deletePreviousDataBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                deletePreviousDataBtnMouseClicked(evt);
            }
        });
        jPanel2.add(deletePreviousDataBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(730, 30, 180, 30));

        deletePreviousDataBtn1.setBackground(new java.awt.Color(53, 168, 83));
        deletePreviousDataBtn1.setFont(new java.awt.Font("Century Gothic", 0, 15)); // NOI18N
        deletePreviousDataBtn1.setForeground(new java.awt.Color(255, 255, 255));
        deletePreviousDataBtn1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        deletePreviousDataBtn1.setText("Refresh Data");
        deletePreviousDataBtn1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        deletePreviousDataBtn1.setOpaque(true);
        deletePreviousDataBtn1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                deletePreviousDataBtn1MouseClicked(evt);
            }
        });
        jPanel2.add(deletePreviousDataBtn1, new org.netbeans.lib.awtextra.AbsoluteConstraints(920, 30, 120, 30));

        getContentPane().add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 70, 1370, 670));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jLabel2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel2MouseClicked
        this.dispose();
    }//GEN-LAST:event_jLabel2MouseClicked

    private void attendanceSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_attendanceSearchActionPerformed

    }//GEN-LAST:event_attendanceSearchActionPerformed

    private void attendanceSearchKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_attendanceSearchKeyReleased
        CommonMethods.searchFromTable(csvTable, attendanceSearch);
    }//GEN-LAST:event_attendanceSearchKeyReleased

    private void csvTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_csvTableMouseClicked
        
    }//GEN-LAST:event_csvTableMouseClicked

    private void csvTableMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_csvTableMouseReleased

    }//GEN-LAST:event_csvTableMouseReleased

    private void jPanel2MouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel2MouseDragged
        // TODO add your handling code here:
    }//GEN-LAST:event_jPanel2MouseDragged

    private void jPanel2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel2MouseClicked

    }//GEN-LAST:event_jPanel2MouseClicked

    private void csvLoaderBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_csvLoaderBtnMouseClicked
        UIManager.put("FileChooser.cancelButtonText", "Cancel");
        UIManager.put("FileChooser.saveButtonText", "Select File");
        JFileChooser fileChooser = new JFileChooser("d:");
        SwingUtilities.updateComponentTreeUI(fileChooser);
        int r = fileChooser.showSaveDialog(null);   
        // if the user selects a file 
        if (r == JFileChooser.APPROVE_OPTION) { 
            System.out.println(fileChooser.getSelectedFile().getAbsolutePath());
            String filePath = fileChooser.getSelectedFile().getAbsolutePath();
            if(filePath.endsWith(".xlsx"))
            {
                ExcelUtility.readFromExcel(filePath);
                populateCSVTable();   
            }else{
                new MessageForm("Error", "Only xlsx files are allowed.", "error.png").setVisible(true);
            }
        } // if the user cancelled the operation 
        else {
            System.out.println("The user cancelled the operation.");
        }
    }//GEN-LAST:event_csvLoaderBtnMouseClicked

    private void analysisBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_analysisBtnMouseClicked
        //ResultSet resultSet = new BookDetailDAOImpl().findAllAnalysedData("");
        //new ReportsFrame(resultSet).setVisible(true);
        analyseData();
    }//GEN-LAST:event_analysisBtnMouseClicked

    private void deletePreviousDataBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_deletePreviousDataBtnMouseClicked
        new DeleteMessageForm("Delete All Records", "Do you want to delete all records?", "info.png").setVisible(true);
        if(DeleteMessageForm.check==1)
        {
            populateCSVTable();
        }
    }//GEN-LAST:event_deletePreviousDataBtnMouseClicked

    private void jLabel3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel3MouseClicked
        this.dispose();        // TODO add your handling code here:
    }//GEN-LAST:event_jLabel3MouseClicked

    private void jLabel6MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel6MouseClicked
//        confirmDeleteDialog.dispose();
//        new BookDetailDAOImpl().deleteAll();
//        new MessageForm("Success", "Deleted successfully.", "success.png").setVisible(true);
//        populateCSVTable();
    }//GEN-LAST:event_jLabel6MouseClicked

    private void jLabel8MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel8MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_jLabel8MouseClicked

    private void deletePreviousDataBtn1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_deletePreviousDataBtn1MouseClicked
        populateCSVTable();
    }//GEN-LAST:event_deletePreviousDataBtn1MouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CSVLoaderFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CSVLoaderFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CSVLoaderFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CSVLoaderFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CSVLoaderFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel analysisBtn;
    private javax.swing.JTextField attendanceSearch;
    private javax.swing.JDialog confirmDeleteDialog;
    private javax.swing.JLabel csvLoaderBtn;
    private javax.swing.JTable csvTable;
    private javax.swing.JLabel deletePreviousDataBtn;
    private javax.swing.JLabel deletePreviousDataBtn1;
    private javax.swing.JLabel header;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel message;
    // End of variables declaration//GEN-END:variables

    private void populateCSVTable() {
        ResultSet resultSet = bookDetailDAO.findAll();
        CommonMethods.fillTables(resultSet, csvTable, jScrollPane2, this);
    }

    private void analyseData() {

        ArrayList<AnalysedData> validBooks = new ArrayList<>();
        Integer count = 0;
        Integer totalBooks = 0;
        SimpleDateFormat myFormat = new SimpleDateFormat("yyyy-MM-dd");
        
        Set<String> checkedKeywords = new HashSet<String>();
        String currentDate = myFormat.format(new Date());
        try {
            for (int i = 0; i < csvTable.getRowCount(); i++) {
                DefaultTableModel row = (DefaultTableModel) csvTable.getModel();
                String previousKeyword = row.getValueAt(i, 2).toString().trim();
                // Skip if already checked
                if(checkedKeywords.contains(previousKeyword))
                {
                    continue;
                }
                String id = row.getValueAt(i, 0).toString();
                checkedKeywords.add(previousKeyword);
                Integer valid = 0;
                boolean check = false;
                long dateDiff = 0;
               
                // Iterate through all the matching keywords
                for (int j = i; j < csvTable.getRowCount(); j++) {
                    String keyword = row.getValueAt(j, 2).toString().trim();
                    Integer bsr = Integer.parseInt(row.getValueAt(j, 3).toString());
                    Integer reviews = Integer.parseInt(row.getValueAt(j, 4).toString());
                    String publicationDate = row.getValueAt(j, 5).toString();
                    Integer price = Integer.parseInt(row.getValueAt(j, 6).toString());
                    String publisher = row.getValueAt(j, 7).toString();

                    Date date1 = myFormat.parse(publicationDate);
                    Date date2 = myFormat.parse(currentDate);
                    long diff = date2.getTime() - date1.getTime();
                    dateDiff = (TimeUnit.DAYS.convert(diff, TimeUnit.MILLISECONDS))+1;
                    //System.out.println("Days: " + dateDiff);

                    if (keyword.equals(previousKeyword)
                            && bsr < 100000
                            && price > 0
                            && (reviews > 0 && reviews < 120)
                            && dateDiff > 30
                            && publisher.equalsIgnoreCase("self Publisher")) {
                        valid++;
                    }
                    if (!keyword.equals(previousKeyword)) {
                        break;
                    }
                }
                AnalysedData analysedData = new AnalysedData();
                analysedData.setAnalysedDataId(Integer.parseInt(id));
                analysedData.setKeyword(previousKeyword);
                analysedData.setProfitableBooks(valid.toString());
                analysedData.setAnalysisDate(currentDate);
                validBooks.add(analysedData);
                valid = 0;
                count++;
            }
            System.out.println(validBooks.size()+" Total");
            new ReportsFrame(validBooks).setVisible(true);
        } catch (ParseException e) {
            e.printStackTrace();
        }        
    }
}
